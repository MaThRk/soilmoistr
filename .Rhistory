theme_light(base_family = f2) +
labs(
y = "",
x = "#",
title = "Number of Soilmoisture rasters intersecting in time with the landslide data"
) +
theme(
legend.position = c(0.8,0.8),
title = element_text(family = "django"),
legend.text = element_text()
)
res %>%
mutate(
intersection = case_when(
is.na(sm_values) ~ FALSE,
TRUE ~ TRUE
)
) %>%
count(intersection) %>%
ggplot() +
geom_col(
aes(
x = n,
y = intersection,
fill = intersection
)
) +
scale_fill_manual(values = pal) +
theme_light(base_family = f2) +
labs(
y = "",
x = "#",
title = "Number of Soilmoisture rasters intersecting in time with the landslide data"
) +
theme(
legend.position = c(0.8,0.8),
title = element_text(family = "django"),
legend.text = element_text()
)
res %>%
mutate(
intersection = case_when(
is.na(sm_values) ~ FALSE,
TRUE ~ TRUE
)
) %>%
count(intersection) %>%
ggplot() +
geom_col(
aes(
x = n,
y = intersection,
fill = intersection
)
) +
scale_fill_manual(values = pal) +
theme_light(base_family = f2) +
labs(
y = "",
x = "#",
title = "Number of Soilmoisture rasters intersecting in time with the landslide data"
) +
theme(
legend.position = c(0.8,0.8),
plot.title = element_text(family = "django")
)
font_families()
res %>%
mutate(
intersection = case_when(
is.na(sm_values) ~ FALSE,
TRUE ~ TRUE
)
) %>%
count(intersection) %>%
ggplot() +
geom_col(
aes(
x = n,
y = intersection,
fill = intersection
)
) +
scale_fill_manual(values = pal) +
theme_light(base_family = f2) +
labs(
y = "",
x = "#",
title = "Number of Soilmoisture rasters intersecting in time with the landslide data"
) +
theme(
legend.position = c(0.8,0.8),
plot.title = element_text(family = "mono")
)
res %>%
mutate(
intersection = case_when(
is.na(sm_values) ~ FALSE,
TRUE ~ TRUE
)
) %>%
count(intersection) %>%
ggplot() +
geom_col(
aes(
x = n,
y = intersection,
fill = intersection
)
) +
scale_fill_manual(values = pal) +
theme_light(base_family = f2) +
labs(
y = "",
x = "#",
title = "Number of Soilmoisture rasters intersecting in time with the landslide data"
) +
theme(
legend.position = c(0.8,0.8),
plot.title = element_text(family = "mono")
)
res %>%
mutate(
intersection = case_when(
is.na(sm_values) ~ FALSE,
TRUE ~ TRUE
)
) %>%
count(intersection) %>%
ggplot() +
geom_col(
aes(
x = n,
y = intersection,
fill = intersection
)
) +
scale_fill_manual(values = pal) +
theme_light(base_family = f2) +
labs(
y = "",
x = "#",
title = "Number of Soilmoisture rasters intersecting in time with the landslide data"
) +
theme(
legend.position = c(0.8,0.8),
title = element_text(family = "mono"),
legend.text = element_text(family = "mono"),
legend.background = element_blank()
)
# create color scale for true and false
pal = c("TRUE" = "#b9cb99", "FALSE" = "#dda982")
res %>%
mutate(
intersection = case_when(
is.na(sm_values) ~ FALSE,
TRUE ~ TRUE
)
) %>%
count(intersection) %>%
ggplot() +
geom_col(
aes(
x = n,
y = intersection,
fill = intersection
)
) +
scale_fill_manual(values = pal) +
theme_light(base_family = f2) +
labs(
y = "",
x = "#",
title = "Number of Soilmoisture rasters intersecting in time with the landslide data"
) +
theme(
legend.position = c(0.8,0.8),
title = element_text(family = "mono"),
legend.text = element_text(family = "mono"),
legend.background = element_blank()
)
res %>%
mutate(
intersection = case_when(
is.na(sm_values) ~ FALSE,
TRUE ~ TRUE
)
) %>%
count(intersection) %>%
ggplot() +
geom_col(
aes(
x = n,
y = intersection,
fill = intersection
)
) +
scale_fill_manual(values = pal) +
theme_light(base_family = f2) +
labs(
y = "",
x = "#",
title = "Number of Soilmoisture rasters intersecting in time with the landslide data"
) +
theme(
legend.position = c(0.8,0.8),
title = element_text(family = "mono"),
legend.text = element_text(family = "mono"),
legend.background = element_blank()
)
res %>%
mutate(
intersection = case_when(
is.na(sm_values) ~ FALSE,
TRUE ~ TRUE
)
) %>%
count(intersection) %>%
ggplot() +
geom_col(
aes(
x = n,
y = intersection,
fill = intersection
)
) +
scale_fill_manual(values = pal) +
theme_light() +
labs(
y = "",
x = "#",
title = "Number of Soilmoisture rasters intersecting in time with the landslide data"
) +
theme(
legend.position = c(0.8,0.8),
title = element_text(family = "mono"),
legend.text = element_text(family = "mono"),
legend.background = element_blank()
)
res %>%
mutate(
intersection = case_when(
is.na(sm_values) ~ FALSE,
TRUE ~ TRUE
)
) %>%
count(intersection) %>%
ggplot() +
geom_col(
aes(
x = n,
y = intersection,
fill = intersection
)
) +
scale_fill_manual(values = pal) +
theme_light() +
labs(
y = "",
x = "#",
title = "Number of Soilmoisture rasters intersecting in time with the landslide data"
) +
theme(
legend.position = c(0.8,0.8),
title = element_text(family = "mono"),
legend.text = element_text(family = "mono"),
legend.background = element_blank()
)
res %>%
mutate(
intersection = case_when(
is.na(sm_values) ~ FALSE,
TRUE ~ TRUE
)
) %>%
count(intersection) %>%
ggplot() +
geom_col(
aes(
x = n,
y = intersection,
fill = intersection
)
) +
scale_fill_manual(values = pal) +
theme_light() +
labs(
y = "",
x = "#",
title = "Number of Soilmoisture rasters intersecting in time with the landslide data"
) +
theme(
legend.position = c(0.8,0.8),
title = element_text(family = "mono"),
legend.text = element_text(family = "mono"),
legend.background = element_blank(),
axis.text.y = element_blank()
)
res %>%
mutate(
intersection = case_when(
is.na(sm_values) ~ FALSE,
TRUE ~ TRUE
)
) %>%
count(intersection) %>%
ggplot() +
geom_col(
aes(
x = n,
y = intersection,
fill = intersection
)
) +
scale_fill_manual(values = pal) +
theme_light() +
labs(
y = "",
x = "#",
title = "Number of Soilmoisture rasters intersecting in time with the landslide data"
) +
theme(
legend.position = c(0.8,0.8),
title = element_text(family = "mono"),
legend.text = element_text(family = "mono"),
legend.background = element_blank(),
axis.text.y = element_blank()
)
library(here)
library(here)
ggsave(filename = path, width = 12, height = 8, dpi=500)
path = ".intersion.png"
ggsave(filename = path, width = 12, height = 8, dpi=500)
path = ".intersection.png"
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
# add fonts
library(showtext)
library(ggtext)
# where does the package look for fonts?
font_paths()
# show local fonts
font_files()
# add the font by providing the family and the name of the truetypefont (.ttf)
font_add(family = "DejaVu Serif", regular = "DejaVuSerif-Bold.ttf")
# create color scale for true and false
pal = c("TRUE" = "#b9cb99", "FALSE" = "#dda982")
res %>%
mutate(
intersection = case_when(
is.na(sm_values) ~ FALSE,
TRUE ~ TRUE
)
) %>%
count(intersection) %>%
ggplot() +
geom_col(
aes(
x = n,
y = intersection,
fill = intersection
)
) +
scale_fill_manual(values = pal) +
theme_light() +
labs(
y = "",
x = "#",
title = "Number of Soilmoisture rasters intersecting in time with the landslide data"
) +
theme(
legend.position = c(0.8,0.8),
title = element_text(family = "mono"),
legend.text = element_text(family = "mono"),
legend.background = element_blank(),
axis.text.y = element_blank()
)
library(soilmoistr)
library(here)
library(iffitoR)
library(raster)
library(stars)
library(sf)
res = get_sm_data(<path_to_soilmoisture_data>,
data = landsld[grepl("translational|rotational", landsld$second_level), ]
data
dim(data)
copy = data.frame(data) %>% st_as_sf()
copy[["date"]] = NULL # remove the date column
res = get_sm_data(
landsld = copy,
path_sm = path_sm
)
path_sm = "/mnt/CEPH_PROJECTS/Proslide/soilmoisture/32632/"
data = data[1:50, ]
res = (get_sm_data(
landsld = data,
path_sm = path_sm
))
res %>% dplyr::select(c(date, PIFF_ID, second_level, sm_values)) %>% glimpse()
# add fonts
library(showtext)
library(ggtext)
# where does the package look for fonts?
font_paths()
# show local fonts
font_files()
# add the font by providing the family and the name of the truetypefont (.ttf)
font_add(family = "DejaVu Serif", regular = "DejaVuSerif-Bold.ttf")
# create color scale for true and false
pal = c("TRUE" = "#b9cb99", "FALSE" = "#dda982")
res %>%
mutate(
intersection = case_when(
is.na(sm_values) ~ FALSE,
TRUE ~ TRUE
)
) %>%
count(intersection) %>%
ggplot() +
geom_col(
aes(
x = n,
y = intersection,
fill = intersection
)
) +
scale_fill_manual(values = pal) +
theme_light() +
labs(
y = "",
x = "#",
title = "Number of Soilmoisture rasters intersecting in time with the landslide data"
) +
theme(
legend.position = c(0.8,0.8),
title = element_text(family = "mono"),
legend.text = element_text(family = "mono"),
legend.background = element_blank(),
axis.text.y = element_blank()
)
devtools::load_all()
devtools::install()
devtools::install()
pkgdown::build_site()
pkgdown::build_site()
devtools::load_all()
get_sm_data(data)
data
dim(data)
res = get_sm_data(
landsld = copy,
path_sm = path_sm
)
res = (get_sm_data(
landsld = data,
path_sm = path_sm
))
res = get_sm_data(
landsld = data,
path_sm = path_sm
)
dim(es)
dim(res)
data
dim(data)
dim(data[!is.na(data$date), ])
devtools::load_all()
res = get_sm_data(
landsld = data,
path_sm = path_sm,
quiet = F
)
devtools::load_all()
res = get_sm_data(
landsld = data,
path_sm = path_sm,
quiet = F
)
res$sm_values[[1]]
res$sm_values[[6]]
st_crs(landsld)
f = read_stars(path_sm[[1]])
list.files(path_sm)[[]]
p = list.files(path_sm)[[1]]
p
f = read_stars(p)
p = list.files(path_sm, full.names = T)[[1]]
f = read_stars(p)
st_crs(f)
# read the first file and compare the crs to the vector geometry
p = list.files(path_sm, full.names = T)[[1]]
f = read_stars(p)
st_crs(f) == st_crs(landsld)
# read the first file and compare the crs to the vector geometry
p = list.files(path_sm, full.names = T)[[1]]
f = read_stars(p)
if(!(st_crs(f) == st_crs(landsld))){
stop("The CRS of the landsld-argument is not the same as the soilmoisture data")
}
landsld = landsld %>% st_transform(., 32633)
st_crs(landsld)
# read the first file and compare the crs to the vector geometry
p = list.files(path_sm, full.names = T)[[1]]
f = read_stars(p)
if(!(st_crs(f) == st_crs(landsld))){
stop("The CRS of the landsld-argument is not the same as the soilmoisture data")
}
rm(list = c("landsld"))
landsld
